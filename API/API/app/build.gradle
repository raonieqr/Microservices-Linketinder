/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.18'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    // This dependency is used by tests
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api',
      version: '5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JDBC driver for postgresql
    implementation 'org.postgresql:postgresql:42.6.0'

    //Servlet
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    //Jackson
    implementation 'org.json:json:20231013'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'api.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
